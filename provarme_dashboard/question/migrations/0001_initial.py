# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-06-28 18:21
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('exam', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Alternative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Alternativa')),
                ('correct', models.BooleanField(default=False, verbose_name='Alternativa correta?')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100, verbose_name='Descrição')),
                ('slug', models.SlugField(max_length=100, verbose_name='Atalho')),
                ('order', models.IntegerField(default=0, verbose_name='Sequência')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='question.Category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wording', models.TextField(verbose_name='Enunciado')),
                ('hint', models.TextField(blank=True, verbose_name='Dica')),
                ('comment', models.TextField(blank=True, verbose_name='Comentário')),
                ('active', models.BooleanField(default=True, verbose_name='Avita')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('categories', mptt.fields.TreeManyToManyField(to='question.Category', verbose_name='Categoria')),
                ('exam', models.ManyToManyField(related_name='questions', to='exam.Exam', verbose_name='Simulado')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=50, verbose_name='Descrição')),
                ('tag', models.SlugField(verbose_name='Tag')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('alternative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Alternative', verbose_name='Resposta')),
                ('exam_result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='exam.ExamResult', verbose_name='Exame')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='question.Question', verbose_name='Questão')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(to='question.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='alternative',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alternatives', to='question.Question', verbose_name='Questão'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together=set([('parent', 'slug')]),
        ),
    ]
